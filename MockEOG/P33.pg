DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
#"PGunion.pl",
"parserRadioButtons.pl",
"parserPopUp.pl",
"compoundProblem5.pl",
"compoundProblem.pl",
"contextLimitedNumeric.pl",
"parserImplicitEquation.pl",
"parserMultiAnswer.pl",
"contextPercent.pl",
"contextCurrency.pl",
"niceTables.pl",
"contextFraction.pl",
"contextLimitedPolynomial.pl"
);

$isProfessor = ($studentLogin eq 'dpvc' || $studentLogin eq 'professor');

$mc1 = RadioButtons(
    [
      "\( 12 \)",
      "\( 10 \)",
      "\( 7 \)",
      "\( 3 \)",
    ],
    "\( 12 \)",
    labels => "ABC" );

$ans_hash1 = $mc1->cmp()->evaluate(
    $inputs_ref->{ANS_NUM_TO_NAME(1)} );


BEGIN_TEXT
33. Veronica and James are both on a bowling team.  Below are their bowling scores.
$PAR
\{ image( "img/P33.png", width=>218, height=>127 ) \}
How much higher is Veronica's median score than James's median score?

$PAR
\{ $mc1->buttons() \}

END_TEXT

ANS( $mc1->cmp() );

$stat = "median";
$popup1 = PopUp(["?", "the difference in scores for each game", "the median score for each player", "the median score for each day"], "the median score for each player");
$popup2 = PopUp(["?", "find their difference", "find the median"], "find their difference");
$popup3 = PopUp(["?", "add them and then divide by the number of values", "put the numbers in order and find the middle number", "find the value that occurs the most frequently"], "put the numbers in order and find the middle number");
$median1 = Compute("129");
$median2 = Compute("141");
$diff = Compute("$median2-$median1");


$ansNum = 1;


$scaffold = Scaffold();
INITIALIZE_SCAFFOLD('$scaffold');
TEXT(beginproblem());

$showPartialCorrectAnswers = 0;

$section = 0;
##############
#  Section
##############
$ansNum += 2;
$section += 1;
@requireCorrect = @nextRequireCorrect;
@nextRequireCorrect = 2..$ansNum;
Context()->texStrings;
DISPLAY_SECTION( { name=>"$section: Devise a plan",
             canshow =>$scaffold->requireCorrect(@requireCorrect),
             iscorrect=>$scaffold->requireCorrect(@nextRequireCorrect),
             section=>$section #designates that this is the first section
},   <<'END_SECTION');

$PAR
Annotate the problem (or rewrite the question on your scratch paper).
$PAR
The question asks us to find ${BBOLD}how much higher is Veronica's median score than James's median score${EBOLD}. To solve the problem completely, we can find \{SECTION_ANS($popup1->cmp), $popup1->menu() \} and then \{SECTION_ANS($popup2->cmp), $popup2->menu() \}.

END_SECTION

##############
#  Section
##############
$ansNum += 4;
$section += 1;
@requireCorrect = @nextRequireCorrect;
@nextRequireCorrect = 2..$ansNum;
Context()->texStrings;
DISPLAY_SECTION( { name=>"$section: Carry out the first step of the plan",
             canshow =>$scaffold->requireCorrect(@requireCorrect),
             iscorrect=>$scaffold->requireCorrect(@nextRequireCorrect),
             section=>$section #designates that this is the first section
},   <<'END_SECTION');
$PAR
To find the $stat of a set of values, we can
\{SECTION_ANS($popup3->cmp), $popup3->menu() \}

$PAR
What are median scores for each of the players?

$BR
Veronica: \{SECTION_ANS($median1->cmp),$median1->ans_rule()\}

$BR
James: \{SECTION_ANS($median2->cmp),$median2->ans_rule()\}

END_SECTION


##############
#  Section
##############
$ansNum += 8;
$section += 1;
@requireCorrect = @nextRequireCorrect;
@nextRequireCorrect = 2..$ansNum;

Context()->texStrings;
DISPLAY_SECTION( { name=>"$section: Carry out the second step of the plan",
             #canshow=>1, #always true
             canshow=>$scaffold->requireCorrect(@requireCorrect),
             iscorrect=>$scaffold->requireCorrect(@nextRequireCorrect),
             section=>$section #designates that this is the first section
},   <<'END_SECTION');

$PAR
What is the difference in median scores between the two players?
\{SECTION_ANS($diff->cmp),$diff->ans_rule()\}

END_SECTION

PROCESS_ANSWERS();

$last_correct_section = PROCESS_SECTIONS();

$opensection = $last_correct_section + 1;
$scaffold->openSections(1..$opensection);


#}
ENDDOCUMENT();
