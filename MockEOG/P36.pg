%concepts = (
"Distributive property"=>"https://www.youtube.com/watch?v=v-6MShC82ow",
#"Compound Probability"=>"https://www.youtube.com/watch?v=xLK0MWRwFYc",
#"Complementary, Supplementary & Vertical Angles"=>"https://www.youtube.com/watch?v=QjwbvNdUSTk",
#"Triangle Inequality"=>"https://www.khanacademy.org/math/geometry/hs-geo-foundations/hs-geo-polygons/v/triangle-inqequality-theorem",
#"Triangle Inequality"=>"https://www.youtube.com/watch?v=ty-ko6zdNpY",
#"Unit rate"=>"https://www.youtube.com/watch?v=RQ2nYUBVvqI",
#"Constant of proportionality"=>"https://www.khanacademy.org/math/cc-seventh-grade-math/cc-7th-ratio-proportion/constant-of-proportionality/v/proportionality-constant-from-table",
#"Proportional relationship"=>"https://www.khanacademy.org/math/pre-algebra/pre-algebra-ratios-rates/pre-algebra-proportional-rel/v/introduction-to-proportional-relationships",
#"Proportion"=>"https://www.youtube.com/watch?v=USmit5zUGas",
#"Percent"=>"https://www.khanacademy.org/math/pre-algebra/pre-algebra-ratios-rates/pre-algebra-intro-percents/v/describing-the-meaning-of-percent",
#"Markup"=>"https://learnzillion.com/resources/9906/",
#"Mean, Median, Mode"=>"https://www.youtube.com/watch?v=B1HEzNTGeZ4",
);
%procedures = (
"Expand an expression using the distributive property"=>"https://www.youtube.com/watch?v=V-5q6tKaRuM",
#"Subtracting linear expressions"=>"https://learnzillion.com/resources/51851/",
#"Find the median of a data set"=>"http://virtualnerd.com/sat-math/arithmetic/averages/median-data-set",
#"Find the mean of a data set"=>"http://virtualnerd.com/middle-math/probability-statistics/mean-median-mode-range/mean-data-set"
#"Find the mean of a set of numbers"=>"https://www.youtube.com/watch?v=DZYhvMCFE5Q",
#"Compare data sets using means and mean absolute deviation"=>"https://learnzillion.com/lesson_plans/7720-compare-the-means-and-mads-of-two-data-sets/",
#"Decide how to sample a population"=>"https://learnzillion.com/lesson_plans/4985-identify-a-representative-sample/",
#"Find the area of a composite shape"=>"https://www.youtube.com/watch?v=by9-_95Zn08",
#"Set up equation for angle pairs"=>"https://www.youtube.com/watch?v=_Xn08vjROU0",
#"Work backward with geometric formulas"=>"https://www.youtube.com/watch?v=1pND890hnAs",
#"Solve two-step inequalities with negative coefficients"=>"https://www.youtube.com/watch?v=2cQjqAZ8Wmw",
#"Convert between percents, fractions, and decimals"=>"https://www.youtube.com/watch?v=JGxnd79DvOc",
#"Solve percent problems"=>"https://www.youtube.com/watch?v=Iz9825HRurw",
#"Compute a unit rate"=>"https://www.khanacademy.org/math/cc-seventh-grade-math/cc-7th-ratio-proportion/cc-7th-rates/v/determining-rates-with-fractions",
#"Write the equation of a proportional relationship"=>"https://www.khanacademy.org/math/cc-seventh-grade-math/cc-7th-ratio-proportion/cc-7th-equations-of-proportional-relationships/v/equations-of-proportional-relationships",
#"Set up a proportion"=>"https://www.khanacademy.org/math/pre-algebra/pre-algebra-ratios-rates/pre-algebra-write-and-solve-proportions/v/writing-proportions",
#"Recognize a proportional relationship"=>"https://www.khanacademy.org/math/pre-algebra/pre-algebra-ratios-rates/pre-algebra-proportional-rel/v/introduction-to-proportional-relationships",
#"Find a percent of a number"=>"https://www.youtube.com/watch?v=rR95Cbcjzus&t=177s",
#"Solve a percent problem using a proportion"=>"https://www.youtube.com/watch?v=Uf-Rl1e2I4Q",
#"Solve multi-step percent problems"=>"https://www.youtube.com/watch?v=JbK9wzNptSs",
);
DOCUMENT();

loadMacros(
"PGstandard.pl",
#"PGunion.pl",
"parserRadioButtons.pl",
"parserPopUp.pl",
"compoundProblem5.pl",
"compoundProblem.pl",
"contextLimitedNumeric.pl",
"parserImplicitEquation.pl",
"parserMultiAnswer.pl",
"contextPercent.pl",
"contextCurrency.pl",
"niceTables.pl",
"contextLimitedPolynomial.pl"
);

$isProfessor = ($studentLogin eq 'dpvc' || $studentLogin eq 'professor');

#$cp = new compoundProblem(
#  parts => 2,                  # the total number of parts in this problem
#  totalAnswers => 3,           # total answers in all parts combined
#  parserValues => 1,           # make parser objects from student answers
#  allowReset => $isProfessor,  # professors get Reset button for testing
#);
Context("Currency");
Context("Numeric");
Context()->variables->add(y=>"Real");
$expr1 = Formula("-3(3y-2x)");
$expr2 = Formula("2(5x-4y)");
$expr = Compute("$expr1+$expr2");
Context("LimitedPolynomial-Strict");
Context()->variables->add(y=>"Real");
$term11 = Compute("-9y");
$term12 = Compute("6x");
$term21 = Compute("10x");
$term22 = Compute("-8y");
$expanded1 = Compute("6x-9y");
$expanded2 = Compute("10x-8y");
$ans = Compute("16x-17y");
$expanded = MultiAnswer($expanded1, $expanded2)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $e1stu, $e2stu) = @{$student};
      my ( $e1, $e2 ) = @{$correct};
      $e1_ans_hash = $e1->cmp()->evaluate($e1stu);
      $e2_ans_hash = $e2->cmp()->evaluate($e2stu);
      return([$e1_ans_hash->{score},$e2_ans_hash->{score}]);
  }
);

BEGIN_TEXT
$PAR
\{
DataTable(
[
  ['Key Concepts:',join(", ", map{ htmlLink( $concepts{$_}, $_, "TARGET='_blank'") } keys %concepts) ],
  ['Procedures:',join(", ", map{ htmlLink( $procedures{$_}, $_, "TARGET='_blank'") } keys %procedures)]
],
  rowheaders => 1,
  tablecss => "border:solid 1px; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
  allcellcss => "border:solid 1px;",
  midrules => 1,
  align => 'l | l ',
);
\}
$PAR
36. Which choice is equivalent to the expression shown below?
$PAR
\( -3(3y - 2x) + 2(5x - 4y) \)

END_TEXT

$ans_hash = $ans->cmp()->evaluate(
    $inputs_ref->{ANS_NUM_TO_NAME(1)} );

#if ($ans_hash->{student_ans} ne '' && $ans_hash->{score} == 0) {
#  $cp->incrementPart();
#}

#$part = $cp->part();


BEGIN_TEXT
$PAR
\{ $ans->ans_rule() \}
END_TEXT

ANS( $ans->cmp() );

#if ($part == 2) {

#BEGIN_TEXT
#$PAR
#${BBOLD}The answer that you entered was incorrect. The following sections will guide you through the solution.$EBOLD
#
#END_TEXT

$scaffold = Scaffold();
INITIALIZE_SCAFFOLD('$scaffold');
TEXT(beginproblem());

#########################
# Responsive text logic
#########################
$ansNum = 2;

##############
$terms1_text = <<'END_TEXT';
$PAR

Find each of the terms in the expanded form of \( $expr1 \):
$PAR
\( -3\cdot 3y= \) \{SECTION_ANS($term11->cmp),$term11->ans_rule()\}
$PAR
\( -3 \cdot (-2x) = \) \{SECTION_ANS($term12->cmp),$term12->ans_rule()\}

END_TEXT
##############
$terms2_text = <<'END_TEXT';
$PAR

Find each of the terms in the expanded form of \( $expr2 \):
$PAR
\( 2\cdot 5x= \) \{SECTION_ANS($term21->cmp),$term21->ans_rule()\}
$PAR
\( 2 \cdot (-4y) = \) \{SECTION_ANS($term22->cmp),$term22->ans_rule()\}

END_TEXT

##############
$replace_paren_text = <<'END_TEXT';
$PAR 
Replace \( $expr1 \) and \( $expr2 \) by the expanded forms of these expression:
$PAR
\( $expr = \) \{SECTION_ANS($expanded1->cmp),$expanded1->ans_rule()\} \( + \) \{SECTION_ANS($expanded2->cmp),$expanded2->ans_rule()\} 

END_TEXT

##############
$terms1_to_expand_text = <<'END_TEXT';
$PAR 
The expanded form of \( $expr1 \) is the sum of these terms.
END_TEXT

##############
$terms2_to_expand_text = <<'END_TEXT';
$PAR 
The expanded form of \( $expr2 \) is the sum of these terms.
END_TEXT


##############
$expand_text = <<'END_TEXT';
$PAR 

Expand \( $expr1 \) and \( $expr2 \)

$PAR
\( $expr1 = \) \{SECTION_ANS($expanded1->cmp),$expanded1->ans_rule()\} 
$PAR
\( $expr2 = \) \{SECTION_ANS($expanded2->cmp),$expanded2->ans_rule()\} 

END_TEXT

###############

$ansNum = 2;
$text1 = $expand_text;
if ($expanded1->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum)})->{score} == 1 && $expanded2->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+1)})->{score} == 1) {
  $text1 .= $replace_paren_text;
  $ansNum += 2;
  #if ($expanded1->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum)})->{score} == 1 && $expanded2->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+1)})->{score} == 1) {
  #}
} else {
  $ansNum += 2;
  if($inputs_ref->{ANS_NUM_TO_NAME($ansNum)} and $inputs_ref->{ANS_NUM_TO_NAME($ansNum+1)}) {
    $text1 .= $terms1_text;
    if ($term11->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum)})->{score} == 1 && $term12->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+1)})->{score} == 1) {
      $text1 .= $terms1_to_expand_text;
    }
    $text1 .= $terms2_text;
    if ($term21->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+2)})->{score} == 1 && $term22->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+3)})->{score} == 1) {
      $text1 .= $terms2_to_expand_text;
    }
  }
  if ($term11->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum)})->{score} == 1 && $term12->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+1)})->{score} == 1 &&
  $term21->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+2)})->{score} == 1 && $term22->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+3)})->{score} == 1) {
    $text1 .= $expand_text;
    $ansNum += 4;
    if ($expanded1->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum)})->{score} == 1 && $expanded2->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+1)})->{score} == 1) {
      $text1 .= $replace_paren_text;
      $ansNum += 2;
      #if ($expanded1->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum)})->{score} == 1 && $expanded2->cmp()->evaluate($inputs_ref->{ANS_NUM_TO_NAME($ansNum+1)})->{score} == 1) {
        #$ansNum += 1;
        #$text .= $final_eval_text;
      #}
    }
  }
}


$section = 0;
##############
#  Section
##############
$section += 1;
@nextRequireCorrect = 2..$ansNum;

Context()->texStrings;
DISPLAY_SECTION( { name=>"$section: Eliminate parentheses in the expression by expanding",
             canshow=>1, #always true
             #canshow=>$scaffold->requireCorrect(@requireCorrect),
             iscorrect=>$scaffold->requireCorrect(@nextRequireCorrect),
             section=>$section #designates that this is the first section
},   <<'END_SECTION');

$PAR
\{EV3($text1);\}


END_SECTION
##############
#  Section
##############
$section += 1;
@requireCorrect = @nextRequireCorrect;
@nextRequireCorrect = $ansNum;

Context()->texStrings;
DISPLAY_SECTION( { name=>"$section: Combine like terms",
             #canshow =>1, #always true
             canshow =>$scaffold->requireCorrect(@requireCorrect),
             iscorrect=>$scaffold->requireCorrect(@nextRequireCorrect),
             section=>$section #designates that this is the first section
},   <<'END_SECTION');

$PAR
We have rewritten \( $expr1 + $expr2 \) without parentheses.
$PAR
Next, simplify the expression by combining like terms
$PAR
\( $expanded1 + $expanded2 = \) \{SECTION_ANS($ans->cmp),$ans->ans_rule()\}


END_SECTION


PROCESS_ANSWERS();

$last_correct_section = PROCESS_SECTIONS();

$opensection = $last_correct_section + 1;
$scaffold->openSections(1..$opensection);


#}
ENDDOCUMENT();
