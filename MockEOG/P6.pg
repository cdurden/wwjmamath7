DOCUMENT();

loadMacros(
"PGstandard.pl",
"parserRadioButtons.pl",
"parserPopUp.pl",
"compoundProblem5.pl",
"compoundProblem.pl",
"contextLimitedNumeric.pl",
"parserImplicitEquation.pl",
"niceTables.pl",
);

$isProfessor = ($studentLogin eq 'dpvc' || $studentLogin eq 'professor');

$cp = new compoundProblem(
  parts => 2,                  # the total number of parts in this problem
  totalAnswers => 3,           # total answers in all parts combined
  parserValues => 1,           # make parser objects from student answers
  allowReset => $isProfessor,  # professors get Reset button for testing
);


$mc1 = RadioButtons(
    [ 'chocolate by \( \frac{1}{6} \) of a cake', 'strawberry by \( \frac{1}{6} \) of a cake', 'chocolate by \( \frac{1}{18} \) of a cake', 'strawberry by \( \frac{1}{18} \) of a cake' ],
    'chocolate by \( \frac{1}{18} \) of a cake',
    labels => "ABC" );

BEGIN_TEXT
$PAR

A baker made two cakes of the same size.

At the end of the day, there was \( \frac{2}{3} \) of a chocolate cake left.
There was \( \frac{5}{6} \) of a strawberry cake left.

The baker divided the remaining chocolate cake into \(2\) equal pieces and the remaining strawberry cake into \(3\)
Which cake flavor had larger pieces and by how much?

END_TEXT

$ans_hash1 = $mc1->cmp()->evaluate(
    $inputs_ref->{ANS_NUM_TO_NAME(1)} );

if ($ans_hash1->{student_ans} ne '' && $ans_hash1->{score} == 0) {
#$cp->part(2);
$cp->incrementPart();
}

$part = $cp->part();

BEGIN_TEXT
$PAR
$BR
\{ $mc1->buttons() \}
END_TEXT

ANS( $mc1->cmp() );

if ($part == 2) {

BEGIN_TEXT
$PAR
${BBOLD}The answer that you entered was incorrect. The following sections will guide you through the solution.$EBOLD

END_TEXT

$scaffold = Scaffold();
INITIALIZE_SCAFFOLD('$scaffold');
TEXT(beginproblem());

##############
#  Section 1
##############

Context()->texStrings;
DISPLAY_SECTION( { name=>"1: Verify that the relationship is proportional",
             canshow =>1, #always true
#             canshow =>$scaffold->requireCorrect(2..5), #always true
             iscorrect=>$scaffold->requireCorrect(2..5),
             section=>1 #designates that this is the first section
},   <<'END_SECTION');

END_SECTION

PROCESS_ANSWERS();

$last_correct_section = PROCESS_SECTIONS();

$opensection = $last_correct_section + 1;
$scaffold->openSections(1..$opensection);
}

ENDDOCUMENT();
